package ai.shelter.shelterbackend.service

import ai.shelter.shelterbackend.entity.Cat
import ai.shelter.shelterbackend.entity.Location
import ai.shelter.shelterbackend.repository.CatRepository
import ai.shelter.shelterbackend.repository.LocationRepository
import org.springframework.beans.factory.annotation.Autowired
import org.springframework.stereotype.Service

/* generated by ChatGPT */
@Service
class CatService(
    val locationRepository: LocationRepository // I did this
) {
    @Autowired
    lateinit var catRepository: CatRepository

    fun createCat(name: String, location: Location): Cat {
        val cat = Cat(name = name, location = location)
        return catRepository.save(cat)
    }

    fun findById(id: Long): Cat? {
        return catRepository.findById(id).orElse(null)
    }

    // this method is updated by ChatGPT to fix error while saving entity Location
    fun save(cat: Cat): Cat {
        val location = cat.location
        locationRepository.save(location)
        return catRepository.save(cat)
    }

    fun deleteById(id: Long) {
        catRepository.deleteById(id)
    }
}